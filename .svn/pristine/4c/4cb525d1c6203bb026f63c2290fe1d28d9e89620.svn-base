<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
      <section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" />
      <section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" />
    </sectionGroup>
  </configSections>
  <location path="App_Themes">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>
  </location>
  <location path="Scripts">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>
  </location>
  <location path="Styles">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>
  </location>
  <location path="About.aspx">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>
  </location>
  <location path="api/eventengine">
    <system.web>
      <authorization>
        <allow users="*" />
      </authorization>
    </system.web>
  </location>
  <system.net>
    <mailSettings>
      <smtp>
        <network host="pod51019.outlook.com" enableSsl="true" port="587" userName="FolsomWorkload@infintech.com" password="!QAZ2wsx" />
      </smtp>
    </mailSettings>
    <defaultProxy enabled="true" />
    <settings>
      <!-- This setting causes .NET to check certificate revocation lists (CRL) 
           before trusting HTTPS certificates.  But this setting tends to not 
           be allowed in shared hosting environments. -->
      <!--<servicePointManager checkCertificateRevocationList="true"/>-->
    </settings>
  </system.net>
  <appSettings>
    <clear />
    <add key="AppTitle" value="Workload Tracking System" />
    <add key="AppTitleAbbreviation" value="WTS" />
    <add key="AppName" value="WTS" />
    <add key="Application-Acronym" value="WTS" />
    <add key="Application-Version" value="1.15.2.0" />
    <add key="Application-DeployDate" value="" />
    <add key="Host" value="http://localhost/" />
    <!-- This is the database server. -->
    <add key="Server" value="." />
    <add key="DatabaseName" value="WTS" />
    <add key="AuthType" value="SQL" />
    <add key="Environment" value="TEST" />
    <add key="Commercial" value="false" />
    <add key="StoreLocation" value="LocalMachine" />
    <!-- Off,Error,Warning,Info,Verbose -->
    <add key="LogLevel" value="Info" />
    <add key="LogUsers" value="" />
    <add key="byPassGetUser" value="false" />
    <add key="EmailEnabled" value="true" />
    <add key="EmailOverride" value="" />
    <add key="EmailServer" value="mail.infintech.com" />
    <add key="EmailFrom" value="FolsomWorkload@infintech.com" />
    <add key="EmailFromName" value="WTS Web Application" />
    <!-- Set up some values for emailing the Exceptions. -->
    <add key="ErrorEmailServer" value="mail.infintech.com" />
    <add key="ErrorEmailFrom" value="FolsomWorkload@infintech.com" />
    <add key="ErrorEmailFromName" value="WTS Web Application - TEST(local dev)" />
    <add key="ErrorEmailTo" value="FolsomWorkload@infintech.com" />
    <add key="ErrorEmailToName" value="WTS Support" />
    <!-- Set up some values for technical support. -->
    <add key="TechSupport-Phone" value="" />
    <add key="TechSupport-Email" value="FolsomWorkload@infintech.com" />
    <add key="TechSupport-Fax" value="916-987-3264" />
    <!-- HELP URLS -->
    <add key="CVTWTSUrl" value="http://localhost/WTS/CVT" />
    <add key="HelpWTSUrl" value="http://localhost/WTS/Help" />
    <!-- Other settings -->
    <add key="PasswordResetExpiration" value="30" />
    <!-- NOTE for WorkItemIDForSRs: This is the WorkItemID that new SR's in WTS (Add SR button) will be assigned to. -->
    <add key="WorkItemIDForSRs" value="14958" />
    <add key="ValidationSettings:UnobtrusiveValidationMode" value="None" />
    <add key="EventQueueEnabled" value="True" />
    <add key="EventQueueRunFrequencySeconds" value="5" />
    <add key="EventQueueCleanMaxAgeHours" value="72" />
    <add key="ReportQueueCleanMaxAgeHours" value="1" />
  </appSettings>
  <connectionStrings>
    <clear />
    <add name="WTS_SQLAuth" connectionString="Server={0};database={1};User Id={2};password={3};" providerName="SQLOLEDB.1" />
    <add name="WTS_WinAuth" connectionString="Server={0};database={1};Integrated Security=SSPI;Persist Security Info=False;" providerName="SQLOLEDB.1" />
    <add name="MembershipConnString" connectionString="Server=.;database=WTS;User Id=WTS_USER;password=!QAZ1qaz;" providerName="SQLOLEDB.1" />
  </connectionStrings>
  <system.web>
    <httpHandlers>
      <add verb="GET" path="CrystalImageHandler.aspx" type="CrystalDecisions.Web.CrystalImageHandler, CrystalDecisions.Web, Version=13.0.3500.0, Culture=neutral, PublicKeyToken=692fbea5521e1304" />
    </httpHandlers>
    <compilation debug="true" targetFramework="4.5">
      <assemblies>
        <add assembly="System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
        <add assembly="System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
        <add assembly="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
        <add assembly="System.Net.Http.WebRequest, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
        <add assembly="Microsoft.Web.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
        <add assembly="System.Data.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
        <add assembly="CrystalDecisions.CrystalReports.Engine, Version=13.0.3500.0, Culture=neutral, PublicKeyToken=692FBEA5521E1304" />
        <add assembly="CrystalDecisions.Shared, Version=13.0.3500.0, Culture=neutral, PublicKeyToken=692FBEA5521E1304" />
      </assemblies>
      <buildProviders>
        <add extension=".edmx" type="System.Data.Entity.Design.AspNet.EntityDesignerBuildProvider" />
      </buildProviders>
    </compilation>
    <httpRuntime targetFramework="4.5" maxRequestLength="200000" maxQueryStringLength="5000" executionTimeout="5000" />
    <pages controlRenderingCompatibilityVersion="4.0" clientIDMode="AutoID">
      <namespaces>
        <clear />
        <add namespace="System" />
        <add namespace="System.Collections" />
        <add namespace="System.Collections.Specialized" />
        <add namespace="System.Configuration" />
        <add namespace="System.Text" />
        <add namespace="System.Text.RegularExpressions" />
        <add namespace="System.Web" />
        <add namespace="System.Web.Caching" />
        <add namespace="System.Web.Optimization" />
        <add namespace="System.Web.SessionState" />
        <add namespace="System.Web.Security" />
        <add namespace="System.Web.Profile" />
        <add namespace="System.Web.UI" />
        <add namespace="System.Web.UI.WebControls" />
        <add namespace="System.Web.UI.WebControls.WebParts" />
        <add namespace="System.Web.UI.HtmlControls" />
      </namespaces>
      <controls>
        <add assembly="iti_Tools_Sharp" namespace="iti_Tools_Sharp" tagPrefix="iti_Tools_Sharp" />
      </controls>
    </pages>
    <authentication mode="Forms">
      <forms loginUrl="~/Account/WTS_Login.aspx" defaultUrl="~/" timeout="20" slidingExpiration="true" name="WTS" cookieless="UseCookies" />
    </authentication>
    <authorization>
      <deny users="?" />
    </authorization>
    <profile enabled="true" defaultProvider="WTSProfileProvider">
      <providers>
        <clear />
        <add name="WTSProfileProvider" applicationName="/" connectionStringName="MembershipConnString" type="System.Web.Security.SqlProfileProvider" />
      </providers>
    </profile>
    <membership defaultProvider="WTSMembershipProvider">
      <providers>
        <clear />
        <add name="WTSMembershipProvider" applicationName="/" connectionStringName="MembershipConnString" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="true" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordFormat="Hashed" type="System.Web.Security.SqlMembershipProvider" />
      </providers>
    </membership>
    <roleManager enabled="true" defaultProvider="WTSRoleProvider">
      <providers>
        <clear />
        <add name="WTSRoleProvider" applicationName="/" connectionStringName="MembershipConnString" type="System.Web.Security.SqlRoleProvider" />
      </providers>
    </roleManager>
    <!--
            If you are deploying to a cloud environment that has multiple web server instances,
            you should change session state mode from "InProc" to "Custom". In addition,
            change the connection string named "DefaultConnection" to connect to an instance
            of SQL Server (including SQL Azure and SQL  Compact) instead of to SQL Server Express.
    -->
    <sessionState mode="InProc" customProvider="DefaultSessionProvider">
      <providers>
        <add name="DefaultSessionProvider" type="System.Web.Providers.DefaultSessionStateProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" />
      </providers>
    </sessionState>
    <customErrors mode="Off" />
    <machineKey validationKey="BFE2A6438BEAB53F5581199625FAF278FF6CF219047CBF9A2F8DCC6FF11837BE37F472E09C82182426EFC1BABCEC48CFD6E4E98A67EBED20316DBFB0514ACD31" decryptionKey="89E9B37825C0EAFB1DC1CC11F7C1AAB22EE345E049226A00BD98A9FDA2768B00" validation="SHA1" decryption="AES" />
  </system.web>
  <system.web.extensions>
    <scripting>
      <webServices>
        <!-- Update this value to change the value to a larger value that can accommodate your JSON Strings -->
        <jsonSerialization maxJsonLength="2147483644" />
      </webServices>
    </scripting>
  </system.web.extensions>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
  </entityFramework>
  <system.webServer>
    <defaultDocument>
      <files>
        <clear />
        <add value="default.aspx" />
        <add value="Default.htm" />
        <add value="Default.asp" />
        <add value="index.htm" />
        <add value="index.html" />
        <add value="iisstart.htm" />
      </files>
    </defaultDocument>
    <handlers>
    <remove name="ExtensionlessUrlHandler-Integrated-4.0" /><remove name="OPTIONSVerbHandler" /><remove name="TRACEVerbHandler" /><add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" /></handlers>
    <validation validateIntegratedModeConfiguration="false" />
    <security>
      <requestFiltering>
        <requestLimits maxQueryString="5000" maxAllowedContentLength="204472320" />
      </requestFiltering>
    </security>
        <staticContent>
            <clientCache cacheControlMode="DisableCache" />
        </staticContent>
  </system.webServer>
  <dotNetOpenAuth>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
          <!--<add name="localhost" />-->
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    <!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. -->
    <!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ -->
    <openid />
  </dotNetOpenAuth>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.5.2.14234" newVersion="1.5.2.14234" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
    <legacyHMACWarning enabled="0" />
  </runtime>
  <uri>
    <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
         which is necessary for OpenID urls with unicode characters in the domain/host name.
         It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
    <idn enabled="All" />
    <iriParsing enabled="true" />
  </uri>
</configuration>