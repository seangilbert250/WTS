<%@ Page Language="C#" AutoEventWireup="true" CodeFile="AOR_Meeting_Instance_Edit.aspx.cs" Inherits="AOR_Meeting_Instance_Edit" MasterPageFile="~/EditTabs.master" Theme="Default" %>

<asp:Content ID="cpHeadTitle" ContentPlaceHolderID="headTitle" runat="Server">AOR Meeting Instance</asp:Content>
<asp:Content ID="cpHead" ContentPlaceHolderID="head" runat="Server">
    <!-- Copyright (c) 2017 Infinite Technologies, Inc. -->
    <link rel="stylesheet" href="Styles/jquery-ui-timepicker-addon.css" />
    <link rel="stylesheet" href="Scripts/cleditor/jquery.cleditor.css" />
</asp:Content>
<asp:Content ID="cpHeaderImage" ContentPlaceHolderID="ContentPlaceHolderHeaderImage" runat="Server">
    <img src="Images/Icons/pencil.png" alt="Meeting Instance" width="15" height="15" />
    <style>
        div {
            font-family: Arial;
	        font-size: 12px;
        }
    </style>
</asp:Content>
<asp:Content ID="cpHeaderText" ContentPlaceHolderID="ContentPlaceHolderHeaderText" runat="Server">
    Meeting Instance
    <img id="imgDownloadPDF" src="Images/Icons/doc_pdf.png" alt="Download PDF" title="Download PDF" width="15" height="15" style="cursor: pointer; margin-left: 3px; display: none;" />
    <div id="divDownloadPDFSettings" style="text-align: left; border: 1px solid gray; position: absolute; background-color: white; padding: 5px; display: none; z-index: 100;">
        <asp:CheckBoxList ID="cblDownloadPDFSettings" runat="server"></asp:CheckBoxList><br />
        <input type="button" id="btnDownloadPDF" value="Download" style="vertical-align: middle;" />
    </div>
</asp:Content>
<asp:Content ID="cpHeaderButtons" ContentPlaceHolderID="ContentPlaceHolderHeaderButtons" runat="Server">
    <img id="imgLocked" src="Images/Icons/lock.png" alt="This meeting is locked" title="This meeting is locked" width="15" height="15" style="cursor: pointer; vertical-align: middle; padding-right: 5px; display: none;" />
    <input type="button" id="btnBackToGrid" value="Back To Meeting Instance Grid" style="vertical-align: middle; display: none;" />
	<input type="button" id="btnCancel" value="Cancel" style="vertical-align: middle; display: none;" />
    <input type="button" id="btnSave" value="Save" disabled="disabled" style="vertical-align: middle; display: none;" />
    <input type="button" id="btnClose" value="Close" style="vertical-align: middle; display: none;" />
</asp:Content>
<asp:Content ID="cpBody" ContentPlaceHolderID="ContentPlaceHolderBody" runat="Server">
    <div id="divPageContainer" style="overflow: hidden;">
        <div id="divAORMeetingInstance" style="padding: 10px;">
            <table style="width: 100%;">
                <tr>
                    <td style="width: 5px;">
                        &nbsp;
                    </td>
                    <td style="width: 165px;">
                        Meeting Instance #:
                    </td>
                    <td>
                        <span id="spnAORMeetingInstance" runat="server">-</span>
                        <div id="divInfo" style="float: right; display: none;"><span id="spnCreated" runat="server"></span><span id="spnUpdated" runat="server" style="padding-left: 30px;"></span></div>
                    </td>
                    <td style="width: 5px;">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td>
                        <span style="color: red;">*</span>
                    </td>
                    <td>
                        Meeting Instance Name:
                    </td>
                    <td>
                        <asp:TextBox ID="txtAORMeetingInstanceName" runat="server" MaxLength="150" Width="75%" ReadOnly="true" ForeColor="Gray"></asp:TextBox>
                    </td>
                    <td>
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td>
                        <span style="color: red;">*</span>
                    </td>
                    <td>
                        Instance Date:
                    </td>
                    <td>
                        <asp:TextBox ID="txtInstanceDate" runat="server" Width="150px" ReadOnly="true" ForeColor="Gray"></asp:TextBox>
                    </td>
                    <td>
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td>
                        &nbsp;
                    </td>
                    <td style="vertical-align: top;">
                        Notes:
                    </td>
                    <td>
                        <asp:TextBox ID="txtNotes" runat="server" TextMode="MultiLine" Rows="4" Width="75%" ReadOnly="true" ForeColor="Gray"></asp:TextBox>
                    </td>
                    <td>
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td>
                        &nbsp;
                    </td>
                    <td>
                        Actual Length:
                    </td>
                    <td>
                        <asp:TextBox ID="txtActualLength" runat="server" MaxLength="4" Width="50px" ReadOnly="true" ForeColor="Gray" style="text-align: center;"></asp:TextBox>&nbsp;Minutes
                    </td>
                    <td>
                        &nbsp;
                    </td>
                </tr>
            </table>
        </div>
        <div id="divToggleDetails" style="width: 100%; text-align: center; display: none;">
            <span id="spnAORMeetingInstanceHeader" runat="server" style="font-weight: bold; display: none;"></span><br />
            <img id="imgToggleDetails" src="Images/Icons/arrow_up_blue.png" title="Hide Details" alt="Hide Details" width="15" height="15" style="cursor: pointer; padding: 5px;" />
        </div>
        <div id="divSubSection" style="display: none;">
            <div id="divTabsContainer" class="mainPageContainer" style="padding: 0px;">
			    <ul>
                    <li><a href="#divAgendaTab">Agenda</a></li>
				    <li><a href="#divAORTab">AORs Included</a></li>
                    <li><a href="#divResourceTab">Resources Attending</a></li>
                    <li><a href="#divHistoryTab">History</a></li>
			    </ul>
                <div id="divAgendaTab" class="tabDiv" style="height: 424px; overflow: auto;">
                    <div style="height: 30px; text-align: right;">
                        <div style="position: absolute; top: 40px; right: 21px; margin: -6px; width: 99%; padding: 5px; background-color: white;">
                            <img id="imgDisplayAllNotes" src="Images/Icons/add_blue.png" title="Show All" alt="Show All" height="12" width="12" style="cursor: pointer; float: left; padding-left: 22px; padding-top: 5px;" />
                            Note Breakout:
                            <asp:DropDownList ID="ddlNoteType" runat="server" Width="200px"></asp:DropDownList>
                            <input type="checkbox" id="chkShowRemovedNote" /><label for="chkShowRemovedNote">Show Removed Note Breakouts</label>&nbsp;
                            <input type="button" id="btnViewHistoricalNotes" value="View Historical Notes" />
                            <input type="button" id="btnAddNote" value="Add Note Breakout" style="display: none;" />
                            <input type="button" id="btnAddNoteDetail" value="Add Note Detail" style="display: none;" />
                        </div>
                    </div>
                    <table style="border-collapse: collapse; width: 100%;">
                        <tr>
                            <td>
                                <div id="divAORMINotes"></div>
                            </td>
                        </tr>
                    </table>
                </div>
                <div id="divAORTab" class="tabDiv" style="height: 424px; overflow: auto;">
                    <table style="border-collapse: collapse; width: 100%;">
                        <tr>
                            <td style="text-align: right;">
                                <input type="checkbox" id="chkShowRemovedAOR" /><label for="chkShowRemovedAOR">Show Removed AORs</label>&nbsp;
                                <input type="button" id="btnAddAOR" value="Add AOR" style="display: none;" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div id="divAORMIAOR"></div>
                            </td>
                        </tr>
                    </table>
                    <div id="divAORProgress" style="padding: 10px 0px;"></div>
                </div>
                <div id="divResourceTab" class="tabDiv" style="height: 424px; overflow: auto;">
                    <table style="border-collapse: collapse; width: 100%;">
                        <tr>
                            <td style="text-align: right;">
                                <input type="checkbox" id="chkShowRemovedResource" /><label for="chkShowRemovedResource">Show Removed Resources</label>&nbsp;
                                <input type="button" id="btnAddResource" value="Add Resource" style="display: none;" />
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <div id="divAORMIResources"></div>
                            </td>
                        </tr>
                    </table>
                </div>
                <div id="divHistoryTab" class="tabDiv" style="height: 424px; overflow: auto;">
                    <table style="border-collapse: collapse; width: 100%;">
                        <tr>
                            <td>
                                <div id="divAORMIHistory"></div>
                            </td>
                        </tr>
                    </table>
                </div>
		    </div>
        </div>
    </div>

    <iframe id="frmDownload" style="display: none;"></iframe>

    <asp:ScriptManager ID="scriptManager1" runat="server" EnablePageMethods="true"></asp:ScriptManager>

    <script src="Scripts/jquery-ui-timepicker-addon.js"></script>
    <script src="Scripts/cleditor/jquery.cleditor.js"></script>

    <script id="jsVariables" type="text/javascript">
        var _pageUrls;
        var _oldNoteTypeQF;
        var _optNote, _optResource;
        var _refreshEditor = false;
        var _sidebarVisible;
        var _resizeTimeout;
    </script>

    <script id="jsEvents" type="text/javascript">
        function imgRefresh_click() {
            if ($('#btnSave').is(':enabled')) {
                QuestionBox('Confirm Refresh', 'You have unsaved changes. Are you sure you would like to refresh the page?', 'Yes,No', 'confirmRefresh', 300, 300, this);
            }
            else {
                refreshPage();
            }
        }

        function imgLocked_click() {
            var nWindow = 'UnlockMeeting';
            var nTitle = 'Unlock Meeting';
            var nHeight = 250, nWidth = 750;
            var nURL = _pageUrls.Maintenance.AORMeetingInstancePopup + window.location.search + '&Type=Unlock Meeting';
            var openPopup = popupManager.AddPopupWindow(nWindow, nTitle, 'Loading.aspx?Page=' + nURL, nHeight, nWidth, 'PopupWindow', this);

            if (openPopup) openPopup.Open();
        }

        function imgDownloadPDF_click() {
            showDownloadPDFSettings();
        }

        function showDownloadPDFSettings() {
            var $objDiv = $('#divDownloadPDFSettings');

            if ($objDiv.is(':visible')) {
                $objDiv.slideUp();
            }
            else {
                var $pos = $('#imgDownloadPDF').position();

                $objDiv.css({
                    top: ($pos.top - 3),
                    left: ($pos.left + 23)
                }).slideDown();

                $('#<%=this.cblDownloadPDFSettings.ClientID %> input').prop('checked', false);

                PageMethods.GetAORs('<%=this.AORMeetingID %>', '<%=this.AORMeetingInstanceID %>', '', getAORCount_done, function () { });
            }
        }

        function getAORCount_done(result) {
            var dt = jQuery.parseJSON(result);

            if (dt != null) {
                $('#<%=this.cblDownloadPDFSettings.ClientID %> label').each(function () {
                    if ($(this).text().indexOf('AORs Included') != -1) {
                        if (dt.length > 0) {
                            $(this).text('AORs Included (' + dt.length + ')');
                            $(this).prev().prop('checked', true);
                        }
                        else {
                            $(this).text('AORs Included');
                        }
                    }
                });
            }

            PageMethods.GetNotes('<%=this.AORMeetingID %>', '<%=this.AORMeetingInstanceID %>', '', '', getNoteCounts_done, function () { });
        }

        function getNoteCounts_done(result) {
            var dt = jQuery.parseJSON(result);

            if (dt != null && dt.length > 0) {
                $.each(dt, function (rowIndex, row) {
                    var noteType = row.AORNoteTypeName;

                    $('#<%=this.cblDownloadPDFSettings.ClientID %> label').each(function () {
                        if ($(this).text().indexOf(noteType) != -1) {
                            $(this).text(noteType + ' (' + row.NoteDetailCount + ')');

                            if (parseInt(row.NoteDetailCount) > 0) $(this).prev().prop('checked', true);
                        }
                    });
                });
            }
        }

        function download(type) {
            var downloadSettings = '';

            switch (type) {
                case 'pdf':
                    var arrSelections = [];

                    $('#<%=this.cblDownloadPDFSettings.ClientID %> input:checked').each(function () {
                        arrSelections.push($(this).next().text());
                    });

                    downloadSettings = arrSelections.join(',');
                    break;
            }

            $('#frmDownload').attr('src', 'AOR_Meeting_Instance_Edit.aspx' + window.location.search + '&Download=' + type + '&DownloadSettings=' + downloadSettings);
        }

        function btnCancel_click() {
            if ($('#btnSave').is(':enabled')) {
                QuestionBox('Confirm Cancel', 'You have unsaved changes. Are you sure you would like to cancel?', 'Yes,No', 'confirmRefresh', 300, 300, this);
            }
            else {
                refreshPage();
            }
        }

        function confirmRefresh(answer) {
            if ($.trim(answer).toUpperCase() == 'YES') refreshPage();
        }

        function btnSave_click(closeAfterSave) {
            try {
                var validation = validate();

                if (validation.length == 0) {
                    ShowDimmer(true, 'Saving...', 1);
                    
                    var arrResources = [], arrNotes = [], arrNoteDetails = [];

                    if ('<%=this.NewAORMeetingInstance %>'.toUpperCase() == 'FALSE') {
                        $('#divAORMIResources tr').not(':first').each(function() {
                            var $obj = $(this);

                            if ($obj.find('input[field="Attended"]').attr('resourceid')) {
                                var attended = $obj.find('input[field="Attended"]').is(':checked') ? '1' : '0';
                                var reasonForAttending = $obj.find('input[field="ReasonForAttending"]').val();

                                arrResources.push({ 'resourceid': $obj.find('input[field="Attended"]').attr('resourceid'), 'attended': attended, 'reasonforattending': reasonForAttending });
                            }
                        });

                        $('#divAORMINotes table tbody tr td table tbody tr:has(td select[field="Status"])').each(function () {
                            var $obj = $(this);
                            
                            if ($obj.find('select[field="Status"]').attr('aormeetingnotesid')) {
                                var title = $obj.find('input[field="Title"]').val();
                                var noteDetails = $obj.next().find('textarea[field="Note Details"]').val();
                                var aorReleaseID = $obj.find('select[field="AOR Name"]').val();
                                var statusID = $obj.find('select[field="Status"]').val();
                                var sort = $obj.find('input[field="Sort"]').val();

                                if (title == undefined) title = $obj.find('td:eq(' + ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE' ? 2 : 1) + ')').text();
                                if (noteDetails == undefined) noteDetails = $obj.next().find('td:eq(' + ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE' ? 2 : 1) + ')').text();

                                arrNoteDetails.push({ 'aormeetingnotesid': $obj.find('select[field="Status"]').attr('aormeetingnotesid'), 'title': title, 'notedetails': noteDetails, 'aorreleaseid': aorReleaseID, 'statusid': statusID, 'sort': sort });
                            }
                        });
                    }

                    var nResourcesJSON = '{save:' + JSON.stringify(arrResources) + '}';
                    var nNotesJSON = '{save:' + JSON.stringify(arrNotes) + '}';
                    var nNoteDetailsJSON = '{save:' + JSON.stringify(arrNoteDetails) + '}';
                    
                    PageMethods.Save('<%=this.NewAORMeetingInstance %>', '<%=this.AORMeetingID %>', '<%=this.AORMeetingInstanceID %>', $('#<%=this.txtAORMeetingInstanceName.ClientID %>').val(),
                        $('#<%=this.txtInstanceDate.ClientID %>').val(), $('#<%=this.txtNotes.ClientID %>').val(), $('#<%=this.txtActualLength.ClientID %>').val(), nResourcesJSON, nNotesJSON, nNoteDetailsJSON,
                        function (result) { save_done(result, closeAfterSave); }, on_error);
                }
                else {
                    MessageBox('Invalid entries: <br><br>' + validation);
                }
            }
            catch (e) {
                ShowDimmer(false);
                MessageBox('An error has occurred.');
            }
        }

        function save_done(result, closeAfterSave) {
            ShowDimmer(false);

            var blnSaved = false;
            var newID = '', errorMsg = '';
            var obj = $.parseJSON(result);

            if (obj) {
                if (obj.saved && obj.saved.toUpperCase() == 'TRUE') blnSaved = true;
                if (obj.newID && parseInt(obj.newID) > 0) newID = obj.newID;
                if (obj.error) errorMsg = obj.error;
            }

            if (blnSaved) {
                if (parent._newItemCreated != undefined) parent._newItemCreated = true;
                if (opener && opener.refreshPage) opener.refreshPage(true);

                if (!closeAfterSave) MessageBox('Meeting Instance has been saved.');

                if (closeAfterSave) {
                    setTimeout(closeWindow, 1);
                }
                else if (parseInt(newID) > 0) {
                    setTimeout(refreshPage(newID), 1);
                }
                else {
                    $('#btnSave').prop('disabled', true);

                    getAORs();
                    getResources();
                    getNotes();
                    getAORProgress();

                    if ($('#divTabsContainer').tabs('option', 'active') != 0) _refreshEditor = true;
                }
            }
            else {
                MessageBox('Failed to save. <br>' + errorMsg);
            }
        }

        function on_error() {
            ShowDimmer(false);
            MessageBox('An error has occurred.');
        }

        function btnBackToGrid_click() {
            if (parent.showFrameForGrid) parent.showFrameForGrid(false);
        }

        function btnClose_click() {
	        if ($('#btnSave').is(':enabled')) {
	            QuestionBox('Confirm Close', 'You have unsaved changes. Would you like to save or discard?', 'Save,Discard,Cancel', 'confirmClose', 300, 300, this);
	        }
	        else {
	            closeWindow();
	        }
	    }

        function confirmClose(answer) {
            switch ($.trim(answer).toUpperCase()) {
                case 'SAVE':
                    btnSave_click(true);
                    break;
                case 'DISCARD':
                    closeWindow();
                    break;
                default:
                    return;
            }
	    }

        function imgToggleDetails_click() {
            var $obj = $('#imgToggleDetails');

            if ($obj.attr('title') == 'Show Details') {
                $obj.attr('src', 'Images/Icons/arrow_up_blue.png');
                $obj.attr('title', 'Hide Details');
                $obj.attr('alt', 'Hide Details');
                $('#<%=this.spnAORMeetingInstanceHeader.ClientID %>').hide();
                $('#divAORMeetingInstance').slideDown('slow', resizePage);
            }
            else {
                $obj.attr('src', 'Images/Icons/arrow_down_blue.png');
                $obj.attr('title', 'Show Details');
                $obj.attr('alt', 'Show Details');
                $('#divAORMeetingInstance').slideUp('slow', function () { $('#<%=this.spnAORMeetingInstanceHeader.ClientID %>').show(); resizePage(); });
            }
        }

        function tab_click(tabName) {
            switch (tabName.toUpperCase()) {
                case 'AGENDA':
                    if (_refreshEditor) refreshAllEditors(); //editor is blank when rebuilt and tab div is hidden
                break;
            }
        }

        function refreshAllEditors() {
            $('.editor').each(function () {
                $(this).cleditor()[0].refresh();
                resizeEditor(this);
            });

            _refreshEditor = false;
        }

        function validate() {
            var validation = [];

            if ($('#<%=this.txtAORMeetingInstanceName.ClientID %>').val().length == 0) validation.push('Meeting Instance Name cannot be empty.');

            if ($('#<%=this.txtInstanceDate.ClientID %>').val().length == 0) validation.push('Instance Date cannot be empty.');

            return validation.join('<br>');
        }

        function input_change(obj) {
            var $obj = $(obj);

            if ($obj.attr('id') && $obj.attr('id').indexOf('ActualLength') != -1) {
                var nVal = $obj.val();

                $obj.val(nVal.replace(/[^\d]/g, ''));
            }

            if ($obj.attr('field') && $obj.attr('field').indexOf('Sort') != -1) {
                var nVal = $obj.val();
                var blnNegative = nVal.indexOf('-') != -1 ? true : false;

                nVal = nVal.replace(/[^\d]/g, '');

                if (blnNegative) nVal = '-' + nVal;

                $obj.val(nVal);
            }

            $('#btnSave').prop('disabled', false);
        }

        function txtBox_blur(obj) {
            var $obj = $(obj);
            var nVal = $obj.val();

            if ($obj.attr('field') && $obj.attr('field').indexOf('Sort') != -1) {
                if (nVal == '-') $obj.val('');
                return;
            }

            $obj.val($.trim(nVal));
        }

        function refreshPage(newID) {
            var nURL = window.location.href;

            if (newID != undefined && parseInt(newID) > 0) {
                nURL = editQueryStringValue(nURL, 'NewAORMeetingInstance', 'false');
                nURL = editQueryStringValue(nURL, 'AORMeetingInstanceID', newID);
            }

            window.location.href = 'Loading.aspx?Page=' + nURL;
        }

        function resizePage() {
            if ('<%=this.NewAORMeetingInstance %>'.toUpperCase() == 'FALSE') {
                var bodyHeight = $(window).height();
                var visibleTabDivTop = $('.tabDiv:visible').offset().top + 5;

                $('.tabDiv').height(bodyHeight - visibleTabDivTop);
            }
        }

        function resizeEditor(obj) {
            var editor = $(obj).cleditor()[0];
            var editorMain = editor.$main[0];
            var editorFrame = editor.$frame[0];
            var contentHeight = editorFrame.contentWindow.document.body.scrollHeight;

            editorFrame.style.height = (contentHeight + 25) + 'px';
            editorMain.style.height = (contentHeight + 55) + 'px';
            editorFrame.style.width = '99.7%';
            editorMain.style.width = '99.7%';
        }

        function chkShowRemovedAOR_change() {
            getAORs();
        }

        function btnAddAOR_click() {
            var nWindow = 'AddAOR';
            var nTitle = 'Add AOR';
            var nHeight = 500, nWidth = 650;
            var nURL = _pageUrls.Maintenance.AORMeetingInstancePopup + window.location.search + '&Type=AOR';
            var openPopup = popupManager.AddPopupWindow(nWindow, nTitle, 'Loading.aspx?Page=' + nURL, nHeight, nWidth, 'PopupWindow', this);

            if (openPopup) openPopup.Open();
        }

        function getAORs() {
            $('#divAORMIAOR').html('<img src="Images/Loaders/loader_2.gif" alt="Loading..." width="15" height="15" />');
            
            PageMethods.GetAORs('<%=this.AORMeetingID %>', '<%=this.AORMeetingInstanceID %>', $('#chkShowRemovedAOR').is(':checked'), getAORs_done, getAORs_error);
        }

        function getAORs_done(result) {
            var nHTML = '';
            var dt = jQuery.parseJSON(result);

            if (dt == null || dt.length == 0) {
                nHTML = 'No AORs';
            }
            else {
                nHTML += '<table style="border-collapse: collapse; width: 100%;">';
                nHTML += '<tr class="gridHeader">';
                nHTML += '<th style="border-top: 1px solid grey; border-left: 1px solid grey; text-align: center; width: 60px;">';
                nHTML += '<img src="Images/Icons/help.png" alt="(Number of open SRs associated with AOR via assigned CRs / Number of open Tasks associated with AOR)" title="(Number of open SRs associated with AOR via assigned CRs / Number of open Tasks associated with AOR)" width="12" height="12" onclick="MessageBox(\'' + '(Number of open SRs associated with AOR via assigned CRs / Number of open Tasks associated with AOR)' + '\');" style="cursor: pointer;" />';
                nHTML += '</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 50px;">AOR #</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 250px;">AOR Name</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center;">Description</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 150px;">Date Added</th>';
                nHTML += '</tr>';
                
                $.each(dt, function (rowIndex, row) {
                    nHTML += '<tr class="gridBody">';
                    nHTML += '<td style="border-left: 1px solid grey; text-align: center;">';
                    nHTML += '<div style="padding: 3px;"><img id="img' + row.AORRelease_ID + '" src="Images/Icons/add_blue.png" title="Show" alt="Show" height="12" width="12" onclick="toggleSRsTasks(this); return false;" aorreleaseid="' + row.AORRelease_ID + '" style="cursor: pointer;" />&nbsp;(' + row.SRCount + '/' + row.TaskCount + ')</div>';

                    if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE') {
                        if (row.Included == 1) {
                            nHTML += '<div style="padding: 3px; padding-bottom: 0px;"><a href="" onclick="toggleAOR(' + row.AORRelease_ID + ', 0); return false;" style="color: blue;">Remove</a></div>';
                        }
                        else if (row.Included == 0) {
                            nHTML += '<div style="padding: 3px; padding-bottom: 0px;"><a href="" onclick="toggleAOR(' + row.AORRelease_ID + ', 1); return false;" style="color: blue;">Re-Add</a></div>';
                        }
                    }
                    
                    nHTML += '</td><td style="text-align: center;">';

                    if ('<%=this.CanViewAOR %>'.toUpperCase() == 'TRUE') {
                        nHTML += '<a href="" onclick="openAOR(' + row.AOR_ID + ', ' + row.AORRelease_ID + ', 0); return false;" style="color: blue;">' + row.AOR_ID + '</a>';
                    }
                    else {
                        nHTML += row.AOR_ID;
                    }

                    nHTML += '</td><td>' + row.AOR + '</td>';
					nHTML += '<td>' + row.Description + '</td>';
                    nHTML += '<td style="text-align: center;">' + row.DateAddedString + '</td>';
                    nHTML += '</tr>';

                    if (rowIndex == dt.length - 1) {
                        nHTML += '<tr class="gridBody" style="display: none;"><td style="border-right: none; border-bottom: none;">&nbsp;</td><td colspan="4" style="border-right: none; border-bottom: none; padding-top: 10px; padding-bottom: 10px;">';
                    }
                    else {
                        nHTML += '<tr class="gridBody" style="display: none;"><td style="border-right: none;">&nbsp;</td><td colspan="4" style="border-right: none; padding-top: 10px; padding-bottom: 10px;">';
                    }

                    nHTML += '<div style="padding: 3px; background: url(Images/page_header_back.gif); border-bottom: 1px solid #d3d3d3;">';
                    nHTML += '<table style="border-collapse: collapse; width: 100%;"><tr>';
                    nHTML += '<td style="padding-left: 5px; border: none;">SRs</td>';
                    nHTML += '<td style="text-align: right; padding-right: 5px; border: none;">';
                    nHTML += '<label><input type="checkbox" id="chkShowClosedSRs' + row.AORRelease_ID + '" name="chkShowClosedSRs" onchange="chkShowClosedSRs_change(' + row.AORRelease_ID + ');"';

                    if (parent._checkedShowClosedSRs != undefined) {
                        if ($.inArray(row.AORRelease_ID, parent._checkedShowClosedSRs) != -1) nHTML += ' checked ';
                    }

                    nHTML += '/>Show Closed SRs</label>&nbsp;&nbsp;';
                    nHTML += '</td></tr></table></div>';
                    nHTML += '<div id="divAORMISRs' + row.AORRelease_ID + '"></div>';
                    nHTML += '<div style="padding: 3px; background: url(Images/page_header_back.gif); border-bottom: 1px solid #d3d3d3;">';
                    nHTML += '<table style="border-collapse: collapse; width: 100%;"><tr>';
                    nHTML += '<td style="padding-left: 5px; border: none;">Tasks</td>';
                    nHTML += '<td style="text-align: right; padding-right: 5px; border: none;">';
                    nHTML += '<label><input type="checkbox" id="chkShowClosedTasks' + row.AORRelease_ID + '" name="chkShowClosedTasks" onchange="chkShowClosedTasks_change(' + row.AORRelease_ID + ');"';

                    if (parent._checkedShowClosedTasks != undefined) {
                        if ($.inArray(row.AORRelease_ID, parent._checkedShowClosedTasks) != -1) nHTML += ' checked ';
                    }

                    nHTML += '/>Show Closed Tasks</label>&nbsp;&nbsp;';
                    nHTML += '</td></tr></table></div>';
                    nHTML += '<div id="divAORMITasks' + row.AORRelease_ID + '"></div>';
                    nHTML += '</td></tr>';
                });

                nHTML += '</table>';
            }

            $('#divAORMIAOR').html(nHTML);
            displaySRsTasks();
        }

        function getAORs_error() {
            $('#divAORMIAOR').html('Error gathering data.');
        }

        function displaySRsTasks() {
            if (parent._expandedAORs != undefined) {
                $.each(parent._expandedAORs, function (index, item) {
                    var $img = $('#img' + item);

                    if ($img.attr('title') == 'Show') $img.trigger('click');
                });
            }
        }

        function toggleAOR(AORReleaseID, opt) {
            PageMethods.ToggleAOR('<%=this.AORMeetingID %>', '<%=this.AORMeetingInstanceID %>', AORReleaseID, opt, toggleAOR_done, toggleAOR_error);
        }

        function toggleAOR_done() {
            getAORs();
            getResources();
            getAORProgress();
        }

        function toggleAOR_error() {
            getAORs();
            MessageBox('An error has occurred.');
        }

        function openAOR(AORID, AORReleaseID) {
            var nWindow = 'AOR';
            var nTitle = 'AOR';
            var nHeight = 700, nWidth = 1400;
            var nURL = _pageUrls.Maintenance.AORTabs + '?NewAOR=false&AORID=' + AORID + '&Source=MI&AORReleaseID=' + AORReleaseID;
            var openPopup = popupManager.AddPopupWindow(nWindow, nTitle, 'Loading.aspx?Page=' + nURL, nHeight, nWidth, 'PopupWindow', this);

            if (openPopup) openPopup.Open();
        }

        function toggleSRsTasks(obj) {
            var $obj = $(obj);
            var AORReleaseID = $obj.attr('aorreleaseid');

            if ($obj.attr('title') == 'Show') {
                $obj.attr('src', 'Images/Icons/minus_blue.png');
                $obj.attr('title', 'Hide')
                $obj.attr('alt', 'Hide')
                $obj.closest('tr').next().show();

                if ($('#divAORMISRs' + AORReleaseID).html() == '') getSRs(AORReleaseID);
                if ($('#divAORMITasks' + AORReleaseID).html() == '') getTasks(AORReleaseID);

                if (parent._expandedAORs != undefined) {
                    if ($.inArray(AORReleaseID, parent._expandedAORs) == -1) parent._expandedAORs.push(AORReleaseID);
                }
            }
            else {
                $obj.attr('src', 'Images/Icons/add_blue.png');
                $obj.attr('title', 'Show')
                $obj.attr('alt', 'Show')
                $obj.closest('tr').next().hide();

                if (parent._expandedAORs != undefined) parent._expandedAORs.splice($.inArray(AORReleaseID, parent._expandedAORs), 1);
            }
        }

        function chkShowClosedSRs_change(AORReleaseID) {
            if ($('#chkShowClosedSRs' + AORReleaseID).is(':checked')) {
                if (parent._checkedShowClosedSRs != undefined) {
                    if ($.inArray(AORReleaseID, parent._checkedShowClosedSRs) == -1) parent._checkedShowClosedSRs.push(AORReleaseID);
                }
            }
            else {
                if (parent._checkedShowClosedSRs != undefined) parent._checkedShowClosedSRs.splice($.inArray(AORReleaseID, parent._checkedShowClosedSRs), 1);
            }

            getSRs(AORReleaseID);
        }

        function getSRs(AORReleaseID) {
            $('#divAORMISRs' + AORReleaseID).html('<img src="Images/Loaders/loader_2.gif" alt="Loading..." width="15" height="15" style="padding: 10px;" />');
            
            PageMethods.GetSRs('<%=this.AORMeetingID %>', '<%=this.AORMeetingInstanceID %>', AORReleaseID, $('#chkShowClosedSRs' + AORReleaseID).is(':checked'), function (result) { getSRs_done(result, AORReleaseID); }, function () { getSRs_error(AORReleaseID); });
        }

        function getSRs_done(result, AORReleaseID) {
            var nHTML = '';
            var dt = jQuery.parseJSON(result);

            if (dt == null || dt.length == 0) {
                $('#divAORMISRs' + AORReleaseID).css('padding', '10px');
                nHTML = 'No SRs';
            }
            else {
                $('#divAORMISRs' + AORReleaseID).css('padding', '');
                nHTML += '<table style="border-collapse: collapse; width: 100%;">';
                nHTML += '<tr class="gridHeader">';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 40px; border-left: 1px solid grey;">SR #</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 120px;">Submitted By</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 70px;">Submitted Date</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 120px;">Status</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 55px;">Priority</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center;">Description</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 300px;">Last Reply</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 55px;">Task #</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 100px;">Task Status</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 110px;">Task Assigned To</th>';
                nHTML += '</tr>';

                $.each(dt, function (rowIndex, row) {
                    nHTML += '<tr class="gridBody">';
                    nHTML += '<td style="border-left: 1px solid grey; text-align: center;">' + row.SRID + '</td>';
                    nHTML += '<td>' + row.SubmittedBy + '</td>';
                    nHTML += '<td style="text-align: center;">' + row.SubmittedDate + '</td>';
                    nHTML += '<td>' + row.Status + '</td>';
                    nHTML += '<td>' + row.Priority + '</td>';

                    var description = decodeURIComponent(row.Description);

                    if (description.length > 125) {
                        nHTML += '<td><a href="" title="' + description + '" onclick="alert(' + JSON.stringify(description).replace(/"/g, '&quot;') + '); return false;" style="color: blue;">' + description.substring(0, 125) + '...' + '</a></td>';
                    }
                    else {
                        nHTML += '<td>' + description + '</td>';
                    }

                    var lastReply = decodeURIComponent(row.LastReply);

                    if (lastReply.length > 125) {
                        nHTML += '<td><a href="" title="' + lastReply + '" onclick="alert(' + JSON.stringify(lastReply).replace(/"/g, '&quot;') + '); return false;" style="color: blue;">' + lastReply.substring(0, 125) + '...' + '</a></td><td style="text-align: center;">';
                    }
                    else {
                        nHTML += '<td>' + lastReply + '</td><td style="text-align: center;">';
                    }

                    if (row.TaskNumber == 0) {
                        nHTML += '&nbsp';
                    }
                    else {
                        if ('<%=this.CanViewWorkItem %>'.toUpperCase() == 'TRUE') {
                            nHTML += '<a href="" onclick="openTask(' + row.TaskNumber + ', 0); return false;" style="color: blue;">' + row.TaskNumber + '</a>';
                        }
                        else {
                            nHTML += row.TaskNumber;
                        }
                    }

                    nHTML += '</td><td>' + row.TaskStatus + '</td>';
                    nHTML += '<td>' + row.TaskAssignedTo + '</td>';
                    nHTML += '</tr>';
                });

                nHTML += '</table>';
            }

            $('#divAORMISRs' + AORReleaseID).html(nHTML);
        }

        function getSRs_error(AORReleaseID) {
            $('#divAORMISRs' + AORReleaseID).css('padding', '10px');
            $('#divAORMISRs' + AORReleaseID).html('Error gathering data.');
        }

        function chkShowClosedTasks_change(AORReleaseID) {
            if ($('#chkShowClosedTasks' + AORReleaseID).is(':checked')) {
                if (parent._checkedShowClosedTasks != undefined) {
                    if ($.inArray(AORReleaseID, parent._checkedShowClosedTasks) == -1) parent._checkedShowClosedTasks.push(AORReleaseID);
                }
            }
            else {
                if (parent._checkedShowClosedTasks != undefined) parent._checkedShowClosedTasks.splice($.inArray(AORReleaseID, parent._checkedShowClosedTasks), 1);
            }

            getTasks(AORReleaseID);
        }

        function getTasks(AORReleaseID) {
            $('#divAORMITasks' + AORReleaseID).html('<img src="Images/Loaders/loader_2.gif" alt="Loading..." width="15" height="15" style="padding: 10px;" />');
            
            PageMethods.GetTasks('<%=this.AORMeetingID %>', '<%=this.AORMeetingInstanceID %>', AORReleaseID, $('#chkShowClosedTasks' + AORReleaseID).is(':checked'), function (result) { getTasks_done(result, AORReleaseID); }, function () { getTasks_error(AORReleaseID); });
        }

        function getTasks_done(result, AORReleaseID) {
            var nHTML = '';
            var dt = jQuery.parseJSON(result);

            if (dt == null || dt.length == 0) {
                $('#divAORMITasks' + AORReleaseID).css('padding', '10px');
                nHTML = 'No Tasks';
            }
            else {
                $('#divAORMITasks' + AORReleaseID).css('padding', '');
                nHTML += '<table style="border-collapse: collapse; width: 100%;">';
                nHTML += '<tr class="gridHeader">';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 55px; border-left: 1px solid grey;">Task #</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center;">Title</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 100px;">System(Task)</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 60px;">Product Version</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 75px;">Production Status</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 55px;">Priority</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 55px;">SR Number</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 110px;">Assigned To</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 110px;">Primary Resource</th>';
                //nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 110px;">Secondary Tech. Resource</th>';
                //nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 110px;">Primary Bus. Resource</th>';
                //nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 110px;">Secondary Bus. Resource</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 110px;">Status</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 65px;">Percent Complete</th>';
                nHTML += '</tr>';

                $.each(dt, function (rowIndex, row) {
                    nHTML += '<tr class="gridBody">';
                    nHTML += '<td style="border-left: 1px solid grey; text-align: center;">';

                    if ('<%=this.CanViewWorkItem %>'.toUpperCase() == 'TRUE') {
                        nHTML += '<a href="" onclick="openTask(' + row.WORKITEMID + ', 0); return false;" style="color: blue;">' + row.WORKITEMID + '</a></td>';
                    }
                    else {
                        nHTML += row.WORKITEMID + '</td>';
                    }

                    var title = decodeURIComponent(row.TITLE);

                    if (title.length > 125) {
                        nHTML += '<td><a href="" title="' + title + '" onclick="alert(' + JSON.stringify(title).replace(/"/g, '&quot;') + '); return false;" style="color: blue;">' + title.substring(0, 125) + '...' + '</a></td>';
                    }
                    else {
                        nHTML += '<td>' + title + '</td>';
                    }

                    nHTML += '<td>' + row.WTS_SYSTEM + '</td>';
                    nHTML += '<td style="text-align: center;">' + row.ProductVersion + '</td>';
                    nHTML += '<td>' + row.ProductionStatus + '</td>';
                    nHTML += '<td>' + row.PRIORITY + '</td>';
                    nHTML += '<td style="text-align: center;">' + row.SR_Number + '</td>';
                    nHTML += '<td>' + row.AssignedTo + '</td>';
                    nHTML += '<td>' + row.PrimaryTechResource + '</td>';
                    //nHTML += '<td>' + row.SecondaryTechResource + '</td>';
                    //nHTML += '<td>' + row.PrimaryBusResource + '</td>';
                    //nHTML += '<td>' + row.SecondaryBusResource + '</td>';
                    nHTML += '<td>' + row.STATUS + '</td>';
                    nHTML += '<td style="text-align: center;">' + row.COMPLETIONPERCENT + '</td>';
                    nHTML += '</tr>';
                });

                nHTML += '</table>';
            }

            $('#divAORMITasks' + AORReleaseID).html(nHTML);
        }

        function getTasks_error(AORReleaseID) {
            $('#divAORMITasks' + AORReleaseID).css('padding', '10px');
            $('#divAORMITasks' + AORReleaseID).html('Error gathering data.');
        }

        function openTask(taskID) {
            var nWindow = 'WorkTask';
            var nTitle = 'Work Task';
            var nHeight = 700, nWidth = 1200;
            var nURL = _pageUrls.Maintenance.WorkItemEditParent;

            if (parseInt(taskID) > 0) {
                nTitle += ' - [' + taskID + ']';
                nURL += '?workItemID=' + taskID;
            }

            var openPopup = popupManager.AddPopupWindow(nWindow, nTitle, 'Loading.aspx?Page=' + nURL, nHeight, nWidth, 'PopupWindow', this);

            if (openPopup) openPopup.Open();
        }

        function showClosed(answer, type) {
            if ($.trim(answer).toUpperCase() == 'YES') {
                if ($('#chkShowClosedNoteDetail' + type).is(':checked')) {
                    if (parent._checkedShowClosed != undefined) {
                        if ($.inArray(type, parent._checkedShowClosed) == -1) parent._checkedShowClosed.push(type);
                    }
                }
                else {
                    if (parent._checkedShowClosed != undefined) parent._checkedShowClosed.splice($.inArray(type, parent._checkedShowClosed), 1);
                }

                getNotesDetail(type);
            }
            else {
                $('#chkShowClosedNoteDetail' + type).prop('checked', !$('#chkShowClosedNoteDetail' + type).is(':checked'));
            }
        }

        function showRemoved(answer, type) {
            switch (type) {
                case 'Note':
                    if ($.trim(answer).toUpperCase() == 'YES') {
                        getNotes();
                    }
                    else {
                        $('#chkShowRemovedNote').prop('checked', !$('#chkShowRemovedNote').is(':checked'));
                    }
                    break;
                case 'Resource':
                    if ($.trim(answer).toUpperCase() == 'YES') {
                        getResources();
                    }
                    else {
                        $('#chkShowRemovedResource').prop('checked', !$('#chkShowRemovedResource').is(':checked'));
                    }
                    break;
                default: //Note Detail (needs type = AORMeetingNotesID)
                    if ($.trim(answer).toUpperCase() == 'YES') {
                        if ($('#chkShowRemovedNoteDetail' + type).is(':checked')) {
                            if (parent._checkedShowRemoved != undefined) {
                                if ($.inArray(type, parent._checkedShowRemoved) == -1) parent._checkedShowRemoved.push(type);
                            }
                        }
                        else {
                            if (parent._checkedShowRemoved != undefined) parent._checkedShowRemoved.splice($.inArray(type, parent._checkedShowRemoved), 1);
                        }

                        getNotesDetail(type);
                    }
                    else {
                        $('#chkShowRemovedNoteDetail' + type).prop('checked', !$('#chkShowRemovedNoteDetail' + type).is(':checked'));
                    }
                    break;
            }
        }

        function openPopup(answer, type) {
            if ($.trim(answer).toUpperCase() == 'YES') {
                switch (type) {
                    case 'Note':
                        var nWindow = 'AddNoteDetail';
                        var nTitle = 'Add Note Detail';
                        var nHeight = 500, nWidth = 650;
                        var nURL = _pageUrls.Maintenance.AORMeetingInstancePopup + window.location.search + '&Type=Note Detail&AORMeetingNotesID=0';
                        var openPopup = popupManager.AddPopupWindow(nWindow, nTitle, 'Loading.aspx?Page=' + nURL, nHeight, nWidth, 'PopupWindow', this);

                        if (openPopup) openPopup.Open();
                        break;
                    case 'Resource':
                        var nWindow = 'AddResource';
                        var nTitle = 'Add Resource';
                        var nHeight = 500, nWidth = 650;
                        var nURL = _pageUrls.Maintenance.AORMeetingInstancePopup + window.location.search + '&Type=Resource';
                        var openPopup = popupManager.AddPopupWindow(nWindow, nTitle, 'Loading.aspx?Page=' + nURL, nHeight, nWidth, 'PopupWindow', this);

                        if (openPopup) openPopup.Open();
                        break;
                    default: //Note Detail (needs type = AORMeetingNotesID)
                        var nWindow = 'NoteDetail';
                        var nTitle = 'Note Detail';
                        var nHeight = 500, nWidth = 650;
                        var nURL = _pageUrls.Maintenance.AORMeetingInstancePopup + window.location.search + '&Type=Edit Note Detail&AORMeetingNotesID=' + type;
                        var openPopup = popupManager.AddPopupWindow(nWindow, nTitle, 'Loading.aspx?Page=' + nURL, nHeight, nWidth, 'PopupWindow', this);

                        if (openPopup) openPopup.Open();
                        break;
                }
            }
        }

        function openAORMeetingInstance(AORMeetingID, AORMeetingInstanceID) {
            var nWindow = 'PastAORMeetingInstance';
            var nTitle = 'Past Meeting Instance';
            var nHeight = 700, nWidth = 1400;
            var nURL = _pageUrls.Maintenance.AORMeetingInstanceEdit + window.location.search;

            nURL = editQueryStringValue(nURL, 'AORMeetingInstanceID', AORMeetingInstanceID);
            
            var openPopup = popupManager.AddPopupWindow(nWindow, nTitle, 'Loading.aspx?Page=' + nURL, nHeight, nWidth, 'PopupWindow', this);

            if (openPopup) openPopup.Open();
        }

        function chkShowRemovedResource_change() {
            if ($('#btnSave').is(':enabled')) {
                QuestionBox('Confirmation', 'Unsaved changes on the Resources Attending tab will be lost. Would you like to proceed?', 'Yes,No', 'showRemoved', 300, 300, this, 'Resource');
            }
            else {
                showRemoved('Yes', 'Resource');
            }
        }

        function btnAddResource_click() {
            if ($('#btnSave').is(':enabled')) {
                QuestionBox('Confirmation', 'Unsaved changes on the Resources Attending tab will be lost if a new resource is added. Would you like to proceed?', 'Yes,No', 'openPopup', 300, 300, this, 'Resource');
            }
            else {
                openPopup('Yes', 'Resource');
            }
        }

        function getResources() {
            $('#divAORMIResources').html('<img src="Images/Loaders/loader_2.gif" alt="Loading..." width="15" height="15" />');
            
            PageMethods.GetResources('<%=this.AORMeetingID %>', '<%=this.AORMeetingInstanceID %>', $('#chkShowRemovedResource').is(':checked'), getResources_done, getResources_error);
        }

        function getResources_done(result) {
            var nHTML = '';
            var dt = jQuery.parseJSON(result);

            if (dt == null || dt.length == 0) {
                nHTML = 'No Resources';
            }
            else {
                nHTML += '<table style="border-collapse: collapse; width: 100%;">';
                nHTML += '<tr class="gridHeader">';

                if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE') {
                    nHTML += '<th style="border-top: 1px solid grey; border-left: 1px solid grey; text-align: center; width: 50px;"></th>';
                    nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 150px;">';
                }
                else {
                    nHTML += '<th style="border-top: 1px solid grey; border-left: 1px solid grey; text-align: center; width: 150px;">';
                }
                
                nHTML += 'Resource</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 250px;">Affiliated AOR</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 150px;">Last Meeting Attended</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 95px;">Attendance %</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 75px;">Attended</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center;">Reason For Attending</th>';
                nHTML += '</tr>';

                $.each(dt, function (rowIndex, row) {
                    nHTML += '<tr class="gridBody">';

                    if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE') {
                        nHTML += '<td style="border-left: 1px solid grey; text-align: center;">';

                        if (row.Included == 1) {
                            nHTML += '<a href="" onclick="toggleResource(' + row.WTS_RESOURCEID + ', 0); return false;" style="color: blue;">Remove</a>';
                        }
                        else if (row.Included == 0) {
                            nHTML += '<a href="" onclick="toggleResource(' + row.WTS_RESOURCEID + ', 1); return false;" style="color: blue;">Re-Add</a>';
                        }
                        
                        nHTML += '</td><td>' + row.Resource + '</td>';
                    }
                    else {
                        nHTML += '<td style="border-left: 1px solid grey;">' + row.Resource + '</td>';
                    }
                    
                    nHTML += '<td>' + row.AffiliatedAOR + '</td>';
                    nHTML += '<td style="text-align: center;">' + row.LastMeetingAttendedString + '</td>';
                    nHTML += '<td style="text-align: center;">' + row.AttendancePercentage + '</td>';
                    nHTML += '<td style="text-align: center;">';

                    if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE' && row.Included == 1) {
                        nHTML += '<input type="checkbox" resourceid="' + row.WTS_RESOURCEID + '" field="Attended" original_value="' + (row.Attended == 'Yes' ? '1' : '0') + '" ' + (row.Attended == 'Yes' ? 'checked' : '') + ' />';
                    }
                    else {
                        nHTML += row.Attended;
                    }

                    nHTML += '</td>';

                    if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE' && row.Included == 1) {
                        nHTML += '<td style="text-align: center;">';
                        nHTML += '<input type="text" value="' + row.ReasonForAttending.replace(/\"/g, '&quot;') + '" maxlength="500" resourceid="' + row.WTS_RESOURCEID + '" field="ReasonForAttending" style="width: 95%;" />';
                    }
                    else {
                        nHTML += '<td>' + row.ReasonForAttending;
                    }

                    nHTML += '</td></tr>';
                });

                nHTML += '</table>';
            }

            $('#divAORMIResources').html(nHTML);
        }

        function getResources_error() {
            $('#divAORMIResources').html('Error gathering data.');
        }

        function toggleResource(resourceID, opt) {
            _optResource = opt;

            if (_optResource == 0) {
                QuestionBox('Confirm Resource Hide', 'Are you sure you would like to hide this resource? Unsaved changes on the Resources Attending tab will be lost. Would you like to proceed?', 'Yes,No', 'confirmToggleResource', 300, 300, this, resourceID);
            }
            else {
                QuestionBox('Confirm Resource Unhide', 'Are you sure you would like to unhide this resource? Unsaved changes on the Resources Attending tab will be lost. Would you like to proceed?', 'Yes,No', 'confirmToggleResource', 300, 300, this, resourceID);
            }
        }

        function confirmToggleResource(answer, resourceID) {
            if ($.trim(answer).toUpperCase() == 'YES') {
                PageMethods.ToggleResource('<%=this.AORMeetingID %>', '<%=this.AORMeetingInstanceID %>', resourceID, _optResource, toggleResource_done, toggleResource_error);
            }
        }

        function toggleResource_done() {
            getResources();
        }

        function toggleResource_error() {
            getResources();
            MessageBox('An error has occurred.');
        }

        function showQF(answer, type) {
            switch (type) {
                case 'Note':
                    if ($.trim(answer).toUpperCase() == 'YES') {
                        getNotes();
                        _oldNoteTypeQF = $('#<%=this.ddlNoteType.ClientID %>').val();
                    }
                    else {
                        $('#<%=this.ddlNoteType.ClientID %>').val(_oldNoteTypeQF);
                    }
                    break;
            }
        }

        function imgDisplayAllNotes_click() {
            var $obj = $('#imgDisplayAllNotes');

            if ($obj.attr('title') == 'Show All') {
                $obj.attr('src', 'Images/Icons/minus_blue.png');
                $obj.attr('title', 'Hide All')
                $obj.attr('alt', 'Hide All')
                
                $('.noteType').each(function () {
                    if ($(this).attr('title') == 'Show') $(this).trigger('click');
                });
            }
            else {
                $obj.attr('src', 'Images/Icons/add_blue.png');
                $obj.attr('title', 'Show All')
                $obj.attr('alt', 'Show All')
                
                $('.noteType').each(function () {
                    if ($(this).attr('title') == 'Hide') $(this).trigger('click');
                });
            }
        }

        function ddlNoteType_change() {
            if ($('#btnSave').is(':enabled')) {
                QuestionBox('Confirmation', 'Unsaved changes on the Agenda tab will be lost. Would you like to proceed?', 'Yes,No', 'showQF', 300, 300, this, 'Note');
            }
            else {
                showQF('Yes', 'Note');
            }
        }

        function chkShowRemovedNote_change() {
            if ($('#btnSave').is(':enabled')) {
                QuestionBox('Confirmation', 'Unsaved changes on the Agenda tab will be lost. Would you like to proceed?', 'Yes,No', 'showRemoved', 300, 300, this, 'Note');
            }
            else {
                showRemoved('Yes', 'Note');
            }
        }

        function btnViewHistoricalNotes_click() {
            var nWindow = 'ViewHistoricalNotes';
            var nTitle = 'View Historical Notes';
            var nHeight = 500, nWidth = 1200;
            var nURL = _pageUrls.Maintenance.AORMeetingInstancePopup + window.location.search + '&Type=Historical Notes';
            var openPopup = popupManager.AddPopupWindow(nWindow, nTitle, 'Loading.aspx?Page=' + nURL, nHeight, nWidth, 'PopupWindow', this);

            if (openPopup) openPopup.Open();
        }

        function btnAddNote_click() {
            var nWindow = 'AddNote';
            var nTitle = 'Add Note Breakout';
            var nHeight = 500, nWidth = 650;
            var nURL = _pageUrls.Maintenance.AORMeetingInstancePopup + window.location.search + '&Type=Note Type';
            var openPopup = popupManager.AddPopupWindow(nWindow, nTitle, 'Loading.aspx?Page=' + nURL, nHeight, nWidth, 'PopupWindow', this);

            if (openPopup) openPopup.Open();
        }

        function getNotes() {
            $('#divAORMINotes').html('<img src="Images/Loaders/loader_2.gif" alt="Loading..." width="15" height="15" />');
            
            PageMethods.GetNotes('<%=this.AORMeetingID %>', '<%=this.AORMeetingInstanceID %>', $('#<%=this.ddlNoteType.ClientID %>').val(), $('#chkShowRemovedNote').is(':checked'), getNotes_done, getNotes_error);
        }

        function getNotes_done(result) {
            var nHTML = '';
            var dt = jQuery.parseJSON(result);

            if (dt == null || dt.length == 0) {
                nHTML = 'No Notes';
            }
            else {
                nHTML += '<table style="border-collapse: collapse; width: 100%;">';

                $.each(dt, function (rowIndex, row) {
                    nHTML += '<tr><td><div class="pageContentHeader" style="height: 25px;"><table style="width: 100%;"><tr><td style="width: 55px; padding-left: 10px;">';
                    nHTML += '<img id="img' + row.AORMeetingNotesID + '" class="noteType" src="Images/Icons/add_blue.png" title="Show" alt="Show" height="12" width="12" onclick="toggleNoteDetails(this); return false;" aormeetingnotesid="' + row.AORMeetingNotesID + '" style="cursor: pointer;" />&nbsp;(' + row.NoteDetailCount + ')</td><td>';

                    if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE') {
                        if (row.Included == 1) {
                            nHTML += '<a href="" onclick="toggleNote(' + row.AORMeetingNotesID + ', 0, 1); return false;" style="color: blue; padding-right: 10px;">Remove</a>';
                        }
                        else if (row.Included == 0) {
                            nHTML += '<a href="" onclick="toggleNote(' + row.AORMeetingNotesID + ', 1, 1); return false;" style="color: blue; padding-right: 10px;">Re-Add</a>';
                        }
                    }
                    
                    nHTML += row.AORNoteTypeName + ':</td>';
                    nHTML += '<td style="text-align: right; padding-right: 5px; border: none;">';

                    var excludedNoteTypes = ['Objectives', 'Burndown Overview', 'Notes'];

                    if ($.inArray(row.AORNoteTypeName, excludedNoteTypes) == -1) {
                        nHTML += '<label><input type="checkbox" id="chkShowClosedNoteDetail' + row.AORMeetingNotesID + '" name="chkShowClosedNoteDetail" onchange="chkShowClosedNoteDetail_change(' + row.AORMeetingNotesID + ');"';

                        if (parent._checkedShowClosed != undefined) {
                            if ($.inArray(row.AORMeetingNotesID, parent._checkedShowClosed) != -1) nHTML += ' checked ';
                        }

                        nHTML += '/>Show Closed Note Details</label>&nbsp;&nbsp;';
                    }

                    nHTML += '<label><input type="checkbox" id="chkShowRemovedNoteDetail' + row.AORMeetingNotesID + '" name="chkShowRemovedNoteDetail" onchange="chkShowRemovedNoteDetail_change(' + row.AORMeetingNotesID + ');"';

                    if (parent._checkedShowRemoved != undefined) {
                        if ($.inArray(row.AORMeetingNotesID, parent._checkedShowRemoved) != -1) nHTML += ' checked ';
                    }

                    nHTML += '/>Show Removed Note Details</label>&nbsp;&nbsp;';
                    nHTML += '</td></tr></table></div></td></tr>';
                    nHTML += '<tr class="gridBody" style="display: none;"><td style="border-right: none; border-bottom: none; padding: 10px 0px 10px 55px;">';
                    nHTML += '<div id="divAORMINotesDetail' + row.AORMeetingNotesID + '"></div>';
                    nHTML += '</td></tr>';
                });

                nHTML += '</table>';
            }

            $('#divAORMINotes').html(nHTML);
            displayNoteDetails();
        }

        function getNotes_error() {
            $('#divAORMINotes').html('Error gathering data.');
        }

        function displayNoteDetails() {
            if (parent._expandedNotes != undefined) {
                $.each(parent._expandedNotes, function (index, item) {
                    var $img = $('#img' + item);

                    if ($img.attr('title') == 'Show') $img.trigger('click');
                });
            }
        }

        function toggleNote(AORMeetingNotesID, opt, blnNoteType) {
            _optNote = opt;
            
            if (_optNote == 0) {
                QuestionBox('Confirm Note ' + (blnNoteType == 1 ? 'Breakout' : 'Detail') + ' Hide', 'Are you sure you would like to hide this note ' + (blnNoteType == 1 ? 'breakout' : 'detail') + '? Unsaved changes on the Agenda tab will be lost. Would you like to proceed?', 'Yes,No', 'confirmToggleNote', 300, 300, this, AORMeetingNotesID);
            }
            else {
                QuestionBox('Confirm Note ' + (blnNoteType == 1 ? 'Breakout' : 'Detail') + ' Unhide', 'Are you sure you would like to unhide this note ' + (blnNoteType == 1 ? 'breakout' : 'detail') + '? Unsaved changes on the Agenda tab will be lost. Would you like to proceed?', 'Yes,No', 'confirmToggleNote', 300, 300, this, AORMeetingNotesID);
            }
        }

        function confirmToggleNote(answer, AORMeetingNotesID) {
            if ($.trim(answer).toUpperCase() == 'YES') {
                PageMethods.ToggleNote('<%=this.AORMeetingID %>', '<%=this.AORMeetingInstanceID %>', AORMeetingNotesID, _optNote, toggleNote_done, toggleNote_error);
            }
        }

        function toggleNote_done() {
            getNotes();
        }

        function toggleNote_error() {
            getNotes();
            MessageBox('An error has occurred.');
        }

        function toggleNoteDetails(obj) {
            var $obj = $(obj);
            var AORMeetingNotesID = $obj.attr('aormeetingnotesid');

            if ($obj.attr('title') == 'Show') {
                $obj.attr('src', 'Images/Icons/minus_blue.png');
                $obj.attr('title', 'Hide')
                $obj.attr('alt', 'Hide')
                $obj.closest('table').parent().closest('tr').next().show();

                if ($('#divAORMINotesDetail' + AORMeetingNotesID).html() == '') getNotesDetail(AORMeetingNotesID);

                if (parent._expandedNotes != undefined) {
                    if ($.inArray(AORMeetingNotesID, parent._expandedNotes) == -1) parent._expandedNotes.push(AORMeetingNotesID);
                }
            }
            else {
                $obj.attr('src', 'Images/Icons/add_blue.png');
                $obj.attr('title', 'Show')
                $obj.attr('alt', 'Show')
                $obj.closest('table').parent().closest('tr').next().hide();

                if (parent._expandedNotes != undefined) parent._expandedNotes.splice($.inArray(AORMeetingNotesID, parent._expandedNotes), 1);
            }
        }

        function chkShowRemovedNoteDetail_change(AORMeetingNotesID) {
            if ($('#btnSave').is(':enabled')) {
                QuestionBox('Confirmation', 'Unsaved changes on this note breakout will be lost. Would you like to proceed?', 'Yes,No', 'showRemoved', 300, 300, this, AORMeetingNotesID);
            }
            else {
                showRemoved('Yes', AORMeetingNotesID);
            }
        }

        function chkShowClosedNoteDetail_change(AORMeetingNotesID) {
            if ($('#btnSave').is(':enabled')) {
                QuestionBox('Confirmation', 'Unsaved changes on this note breakout will be lost. Would you like to proceed?', 'Yes,No', 'showClosed', 300, 300, this, AORMeetingNotesID);
            }
            else {
                showClosed('Yes', AORMeetingNotesID);
            }
        }

        function btnAddNoteDetail_click() {
            if ($('#btnSave').is(':enabled')) {
                QuestionBox('Confirmation', 'Unsaved changes on the Agenda tab will be lost if a new note detail is added. Would you like to proceed?', 'Yes,No', 'openPopup', 300, 300, this, 'Note');
            }
            else {
                openPopup('Yes', 'Note');
            }
        }

        function editNoteDetail(AORMeetingNotesID) {
            if ($('#btnSave').is(':enabled')) {
                QuestionBox('Confirmation', 'Unsaved changes on this note breakout will be lost if a note detail is updated. Would you like to proceed?', 'Yes,No', 'openPopup', 300, 300, this, AORMeetingNotesID);
            }
            else {
                openPopup('Yes', AORMeetingNotesID);
            }
        }

        function getNotesDetail(AORMeetingNotesID) {
            $('#divAORMINotesDetail' + AORMeetingNotesID).html('<img src="Images/Loaders/loader_2.gif" alt="Loading..." width="15" height="15" style="padding: 10px;" />');
            
            PageMethods.GetNotesDetail(AORMeetingNotesID, $('#chkShowRemovedNoteDetail' + AORMeetingNotesID).is(':checked'), $('#chkShowClosedNoteDetail' + AORMeetingNotesID).is(':checked'), function (result) { getNotesDetail_done(result, AORMeetingNotesID); }, function () { getNotesDetail_error(AORMeetingNotesID); });
        }

        function getNotesDetail_done(result, AORMeetingNotesID) {
            var nHTML = '';
            var dt = jQuery.parseJSON(result);

            if (dt == null || dt.length == 0) {
                $('#divAORMINotesDetail' + AORMeetingNotesID).css('padding', '10px');
                nHTML = 'No Note Details';
            }
            else {
                $('#divAORMINotesDetail' + AORMeetingNotesID).css('padding', '');
                nHTML += '<table style="border-collapse: collapse; width: 100%;">';
                nHTML += '<tr class="gridHeader">';
                
                if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE') {
                    nHTML += '<th style="border-top: 1px solid grey; border-left: 1px solid grey; text-align: center; width: 50px;"></th>';
                    nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 60px;">';
                }
                else {
                    nHTML += '<th style="border-top: 1px solid grey; border-left: 1px solid grey; text-align: center; width: 60px;">';
                }

                nHTML += 'Note #</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: left; padding-left: 10px;">Title</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 350px;">AOR Name</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 150px;">Date Added</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 150px;">Status</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 150px;">Status Date</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center; width: 70px;">Sort</th>';
                nHTML += '</tr>';

                $.each(dt, function (rowIndex, row) {
                    nHTML += '<tr class="gridBody">';
                    nHTML += '<td style="border-left: 1px solid grey; text-align: center;">';

                    if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE') {
                        if (row.Included == 1) {
                            nHTML += '<a href="" onclick="toggleNote(' + row.AORMeetingNotesID + ', 0, 0); return false;" style="color: blue;">Remove</a>';
                        }
                        else if (row.Included == 0) {
                            nHTML += '<a href="" onclick="toggleNote(' + row.AORMeetingNotesID + ', 1, 0); return false;" style="color: blue;">Re-Add</a>';
                        }

                        nHTML += '</td><td style="text-align: center;"><a href="" onclick="editNoteDetail(' + row.AORMeetingNotesID + ', 0); return false;" style="color: blue;">' + row.AORMeetingNotesID + '</a></td>';
                    }
                    else {
                        nHTML += '<a href="" onclick="editNoteDetail(' + row.AORMeetingNotesID + ', 0); return false;" style="color: blue;">' + row.AORMeetingNotesID + '</a></td>';
                    }

                    if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE' && row.STATUS != 'Closed') {
                        nHTML += '<td style="text-align: center;"><input type="text" value="' + row.Title.replace(/\"/g, '&quot;') + '" maxlength="150" aormeetingnotesid="' + row.AORMeetingNotesID + '" field="Title" style="width: 97%;" /></td>';
                    }
                    else {
                        nHTML += '<td>' + row.Title + '</td>';
                    }

                    if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE') {
                        var nOptions = decodeURIComponent('<%=this.NoteAOROptions %>');

                        if (nOptions.indexOf('value="' + row.AORReleaseID + '"') == -1) {
                            var nText = '';

                            switch (row.ProductionStatus.toUpperCase()) {
                                case 'RELEASE CAFDEX':
                                    nText = '(R) ';
                                    break;
                                case 'PRODUCTION SUPPORT':
                                    nText = '(P) ';
                                    break;
                                default:
                                    nText = '(O) ';
                                    break;
                            }

                            nOptions = '<option value="' + row.AORReleaseID + '" selected>' + nText + row.AORID + ' - ' + row.AORName + '</option>' + nOptions;
                        }
                        else {
                            nOptions = nOptions.replace('value="' + row.AORReleaseID + '"', 'value="' + row.AORReleaseID + '" selected');
                        }
                        
                        nHTML += '<td style="text-align: center;">';
                        nHTML += '<select aormeetingnotesid="' + row.AORMeetingNotesID + '" field="AOR Name" original_value="' + row.AORReleaseID + '" style="width: 97%; background-color: #F5F6CE;">' + nOptions + '</select></td>';
                    }
                    else {
                        nHTML += '<td>' + row.AORName + '</td>';
                    }

                    nHTML += '<td style="text-align: center;">' + row.AddDateString + '</td>';

                    var excludedNoteTypes = ['Objectives', 'Burndown Overview', 'Notes'];

                    if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE') {
                        var nOptions = decodeURIComponent('<%=this.NoteStatusOptions %>');

                        nOptions = nOptions.replace('value="' + row.STATUSID + '"', 'value="' + row.STATUSID + '" selected');
                        nHTML += '<td style="text-align: center;"><select ';

                        if ($.inArray(row.AORNoteTypeName, excludedNoteTypes) != -1) nHTML += 'disabled';

                        nHTML += ' aormeetingnotesid="' + row.AORMeetingNotesID + '" field="Status" original_value="' + row.STATUSID + '" style="width: 95%; background-color: #F5F6CE;">' + nOptions + '</select></td>';
                    }
                    else {
                        nHTML += '<td>' + row.STATUS + '</td>';
                    }
                    
                    nHTML += '<td style="text-align: center;">' + row.StatusDateString + '</td>';

                    if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE') {
                        nHTML += '<td style="text-align: center;"><input type="text" value="' + row.Sort + '" maxlength="5" aormeetingnotesid="' + row.AORMeetingNotesID + '" field="Sort" original_value="' + row.Sort + '" style="width: 80%; text-align: center;" /></td>';
                    }
                    else {
                        nHTML += '<td style="text-align: center;">' + row.Sort + '</td>';
                    }
                    
                    nHTML += '</tr>';

                    //note detail
                    nHTML += '<tr class="gridBody">';
                    
                    if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE' && row.STATUS != 'Closed') {
                        nHTML += '<td style="border-bottom: none; border-right: none;"></td><td style="border-bottom: none;"></td><td colspan="6" style="text-align: center;"><textarea class="editor" aormeetingnotesid="' + row.AORMeetingNotesID + '" field="Note Details" notestatus="' + row.STATUS + '" style="width: 99%;">' + row.Notes + '</textarea></td>';
                    }
                    else if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE' && row.STATUS == 'Closed') {
                        nHTML += '<td style="border-bottom: none; border-right: none;"></td><td style="border-bottom: none;"></td><td colspan="6" style="text-align: center;"><textarea class="editor" style="width: 99%; background-color: white; border: none;" readonly="readonly">' + row.Notes + '</textarea></td>';
                    }
                    else {
                        nHTML += '<td style="border-bottom: none;"></td><td colspan="6" style="text-align: center;"><textarea class="editor" style="width: 99%; background-color: white; border: none;" readonly="readonly">' + row.Notes + '</textarea></td>';
                    }

                    nHTML += '</tr>';

                    //space
                    if (rowIndex != dt.length - 1) {
                        nHTML += '<tr class="gridBody">';

                        if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE' && row.STATUS != 'Closed') {
                            nHTML += '<td colspan="8" style="border-right: none; height: 20px;"></td>';
                        }
                        else {
                            nHTML += '<td colspan="7" style="border-right: none; height: 20px;"></td>';
                        }

                        nHTML += '</tr>';
                    }
                });

                nHTML += '</table>';
            }

            $('#divAORMINotesDetail' + AORMeetingNotesID).html(nHTML);

            $('#divAORMINotesDetail' + AORMeetingNotesID).find('textarea').each(function () {
                var obj = this;

                if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE' && $(this).attr('notestatus') != 'Closed') {
                    $(this).cleditor({
                        controls: 
                            'bold italic underline strikethrough subscript superscript | font size ' +
                            'style | color highlight removeformat | bullets numbering | outdent ' +
                            'indent | alignleft center alignright justify | undo redo | ' +
                            'rule image link unlink | cut copy paste pastetext | print',
                        bodyStyle: 'background-color: #F5F6CE; font-family: Arial; font-size: 12px;'
                    })[0].change(function () { input_change(this); resizeEditor(obj); });
                }
                else {
                    $(this).cleditor({
                        bodyStyle: 'font-family: Arial; font-size: 12px;'
                    })[0].disable(true);
                }

                resizeEditor(obj);
            });
        }

        function getNotesDetail_error(AORMeetingNotesID) {
            $('#divAORMINotesDetail' + AORMeetingNotesID).css('padding', '10px');
            $('#divAORMINotesDetail' + AORMeetingNotesID).html('Error gathering data.');
        }

        function getAORProgress() {
            $('#divAORProgress').html('<img src="Images/Loaders/loader_2.gif" alt="Loading..." width="15" height="15" />');

            PageMethods.GetAORProgress('<%=this.AORMeetingID %>', '<%=this.AORMeetingInstanceID %>', getAORProgress_done, getAORProgress_error);
        }

        function getAORProgress_done(result) {
            var nHTML = '';
            var dt = jQuery.parseJSON(result);

            if (dt == null || dt.length == 0) {
                //nHTML = 'No AORs';
            }
            else {
                $.each(dt, function (rowIndex, row) {
                    if (rowIndex > 0) nHTML += '<br><br>';

                    nHTML += '<table>';
                    nHTML += '<tr><td colspan="7"><b>AOR Name:</b>&nbsp;&nbsp;' + row.AOR + '</td></tr>';
                    nHTML += '<tr><td colspan="7"><b>Threshold Met:</b>&nbsp;&nbsp;' + row.ThresholdMet + '</td></tr>';
                    nHTML += '<tr><td colspan="7">&nbsp;</td></tr>';
                    nHTML += '<tr><td style="width:25px;"></td><td colspan="2" style="text-align: center;"><b>Design</b></td><td style="width:25px;"></td><td colspan="2" style="text-align: center;"><b>Develop</b></td><td></td></tr>';
                    nHTML += '<tr><td>&nbsp;</td><td>Exit Criteria Met:</td><td>' + row.ExitCriteriaMet + '</td><td>&nbsp;</td><td>Entrance Criteria Met:</td><td>' + row.EntranceCriteriaMet + '</td><td></td></tr>';
                    nHTML += '<tr><td>&nbsp;</td><td style="width: 1px;">Exit&nbsp;Criteria&nbsp;Open:</td><td style="width: 1px;">' + row.ExitCriteriaOpen + '</td><td>&nbsp;</td><td style="width: 1px;">Entrance&nbsp;Criteria&nbsp;Open:</td><td style="width: 1px;">' + row.EntranceCriteriaOpen + '</td><td></td></tr>';
                    nHTML += '<tr><td>&nbsp;</td><td>Exit Criteria N/A:</td><td>' + row.ExitCriteriaNA + '</td><td>&nbsp;</td><td>Entrance Criteria N/A:</td><td>' + row.EntranceCriteriaNA + '</td><td></td></tr>';
                    nHTML += '</table>';
                });
            }

            $('#divAORProgress').html(nHTML);
        }

        function getAORProgress_error() {
            $('#divAORProgress').html('Error gathering data.');
        }

        function getHistory() {
            $('#divAORMIHistory').html('<img src="Images/Loaders/loader_2.gif" alt="Loading..." width="15" height="15" />');
            
            PageMethods.GetHistory('<%=this.AORMeetingID %>', '<%=this.AORMeetingInstanceID %>', getHistory_done, getHistory_error);
        }

        function getHistory_done(result) {
            var nHTML = '';
            var dt = jQuery.parseJSON(result);

            if (dt == null || dt.length == 0) {
                nHTML = 'No History';
            }
            else {
                nHTML += '<table style="border-collapse: collapse;">';
                nHTML += '<tr class="gridHeader">';
                nHTML += '<th style="border-top: 1px solid grey; border-left: 1px solid grey; text-align: center;">Instance Date</th>';
                nHTML += '<th style="border-top: 1px solid grey; text-align: center;">Meeting Instance #</th>';
                nHTML += '<th style="border-top: 1px solid grey;">Meeting Instance Name</th>';
                nHTML += '</tr>';

                $.each(dt, function (rowIndex, row) {
                    nHTML += '<tr class="gridBody">';
                    nHTML += '<td style="border-left: 1px solid grey; text-align: center;">' + row.InstanceDateString + '</td>';
                    nHTML += '<td style="text-align: center;">';
                    nHTML += '<a href="" onclick="openAORMeetingInstance(' + '<%=this.AORMeetingID %>' + ', ' + row.AORMeetingInstanceID + '); return false;" style="color: blue;">' + row.AORMeetingInstanceID + '</a>';
                    nHTML += '</td>';
                    nHTML += '<td>' + row.AORMeetingInstanceName + '</td>';
                    nHTML += '</tr>';
                });

                nHTML += '</table>';
            }

            $('#divAORMIHistory').html(nHTML);
        }

        function getHistory_error() {
            $('#divAORMIHistory').html('Error gathering data.');
        }
    </script>

    <script id="jsInit" type="text/javascript">
        function initVariables() {
            _pageUrls = new PageURLs();
            _oldNoteTypeQF = $('#<%=this.ddlNoteType.ClientID %>').val();

            if (parent._expandedNotes != undefined) parent._expandedNotes = [];
            if (parent._checkedShowRemoved != undefined) parent._checkedShowRemoved = [];
            if (parent._checkedShowClosed != undefined) parent._checkedShowClosed = [];
            if (parent.showFrameForGrid) _sidebarVisible = $('#sidebar', defaultParentPage.document).is(':visible');
        }

        function initControls() {
            $('#divTabsContainer').tabs();

            if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE') {
                $('#<%=this.txtInstanceDate.ClientID %>').datetimepicker({
                    controlType: 'select',
                    dateFormat: 'm/d/yy',
                    timeFormat: 'h:mm TT'
                });
            }
        }

        function initDisplay() {
            if ('<%=this.NewAORMeetingInstance %>'.toUpperCase() == 'FALSE') {
                if ('<%=this.Locked %>'.toUpperCase() == 'TRUE') $('#imgLocked').show();

                $('#imgDownloadPDF').show();
                $('#divInfo').show();
                $('#divToggleDetails').show();
                $('#divSubSection').show();
                getAORs();
                getResources();
                getNotes();
                getAORProgress();
                getHistory();
            }

            if ('<%=this.CanEditAORMeetingInstance %>'.toUpperCase() == 'TRUE') {
                $('input[type="text"], textarea').css('color', 'black');
                $('input[type="text"], textarea').not('#<%=this.txtInstanceDate.ClientID %>').removeAttr('readonly');
                $('select').removeAttr('disabled');
                $('#btnCancel').show();
                $('#btnSave').show();
                $('#btnAddAOR').show();
                $('#btnAddResource').show();
                //$('#btnAddNote').show();
                $('#btnAddNoteDetail').show();
            }

            if (parent.showFrameForGrid) {
                $('#btnBackToGrid').show();
            }
            else if (opener != undefined) {
                $('#btnClose').show();
            }

            resizePage();
        }

        function initEvents() {
            $('#imgRefresh').click(function () { imgRefresh_click(); });

            if ('<%=this.CanEditAORMeetingInstanceAlt %>'.toUpperCase() == 'TRUE') $('#imgLocked').click(function () { imgLocked_click(); });

            $('#imgDownloadPDF').click(function () { imgDownloadPDF_click(); });
            $('#btnDownloadPDF').click(function () { download('pdf'); showDownloadPDFSettings(); return false; });
            $('#btnCancel').click(function () { btnCancel_click(); return false; });
            $('#btnSave').click(function () { btnSave_click(false); return false; });
            $('#btnBackToGrid').click(function () { btnBackToGrid_click(); return false; });
            $('#btnClose').click(function () { btnClose_click(); return false; });
            $('#imgToggleDetails').click(function () { imgToggleDetails_click(); });
            $('#divTabsContainer ul li a').click(function () { tab_click($(this).text()); });
            $('#divPageContainer').on('keyup paste', 'input[type="text"]:not(#<%=this.txtInstanceDate.ClientID %>), textarea', function (event) {
                if (event.keyCode != 9 && event.keyCode != 16) input_change(this);
            });
            $('#divPageContainer').on('change', 'select:not(#<%=this.ddlNoteType.ClientID %>), input[type="checkbox"]:not(#chkShowRemovedAOR, [name="chkShowClosedSRs"], [name="chkShowClosedTasks"], #chkShowRemovedResource, #chkShowRemovedNote, [name="chkShowRemovedNoteDetail"], [name="chkShowClosedNoteDetail"])', function () { input_change(this); });
            $('#divPageContainer').on('blur', 'input[type="text"], textarea', function () { txtBox_blur(this); });
            $('#<%=this.txtInstanceDate.ClientID %>').change(function () { input_change(this); });
            $('#chkShowRemovedAOR').change(function () { chkShowRemovedAOR_change(); });
            $('#chkShowRemovedResource').change(function () { chkShowRemovedResource_change(); });
            $('#chkShowRemovedNote').change(function () { chkShowRemovedNote_change(); });
            $('#btnAddAOR').click(function () { btnAddAOR_click(); return false; });
            $('#btnAddResource').click(function () { btnAddResource_click(); return false; });
            $('#imgDisplayAllNotes').click(function () { imgDisplayAllNotes_click(); });
            $('#<%=this.ddlNoteType.ClientID %>').change(function () { ddlNoteType_change(); });
            $('#btnViewHistoricalNotes').click(function () { btnViewHistoricalNotes_click(); return false; });
            $('#btnAddNote').click(function () { btnAddNote_click(); return false; });
            $('#btnAddNoteDetail').click(function () { btnAddNoteDetail_click(); return false; });
            $(window).resize(function () {
                resizePage();
                clearTimeout(_resizeTimeout);
                _resizeTimeout = setTimeout(function () {
                    refreshAllEditors();
                }, 500);
            });
            $(document).click(function (e) {
                try {
                    var objID = $(e.target).prop('id');
                    var objHtmlFor = $(e.target).prop('htmlFor');
                    var objFirstChildID = '';

                    if ($(e.target).children(':first').length > 0) {
                        objFirstChildID = $(e.target).children(':first').prop('id');
                    }

                    if (objHtmlFor == undefined) objHtmlFor = '';
                    if (objFirstChildID == undefined) objFirstChildID = '';
                    if (objID != 'imgDownloadPDF' && objID != 'divDownloadPDFSettings' && objID.indexOf('cblDownloadPDFSettings') == -1 && objHtmlFor.indexOf('cblDownloadPDFSettings') == -1 && objFirstChildID.indexOf('cblDownloadPDFSettings') == -1) $('#divDownloadPDFSettings').slideUp();
                }
                catch (e) { }
            });
            $(window).on('beforeunload', function () {
                if (opener != undefined) {
                    if (parent._expandedAORs != undefined) parent._expandedAORs = [];
                    if (parent._expandedNotes != undefined) parent._expandedNotes = [];
                    if (parent._checkedShowClosedSRs != undefined) parent._checkedShowClosedSRs = [];
                    if (parent._checkedShowClosedTasks != undefined) parent._checkedShowClosedTasks = [];
                    if (parent._checkedShowRemoved != undefined) parent._checkedShowRemoved = [];
                    if (parent._checkedShowClosed != undefined) parent._checkedShowClosed = [];
                }
            });

            if (parent.showFrameForGrid) {
                setInterval(function () {
                    if ($('#sidebar', defaultParentPage.document).is(':visible') != _sidebarVisible) {
                        refreshAllEditors();
                        _sidebarVisible = $('#sidebar', defaultParentPage.document).is(':visible');
                    }
                }, 1000);
            }
        }

        $(document).ready(function () {
            if ('<%=this.Download %>' == '') {
                initVariables();
                initControls();
                initDisplay();
                initEvents();
            }
        });
    </script>
</asp:Content>